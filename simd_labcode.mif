WIDTH = 14;
DEPTH = 16384;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;


CONTENT BEGIN
0:00011001010101;  %  @start sub r5 r5   %
1:00011001100110;  %  sub r6 r6   %
2:00011000110011;  %  sub r3 r3   %
3:00011001000100;  %  sub r4 r4   %
4:00011011111111;  %  sub r15 r15   %
5:00011101100010;  %  addc r6 #2   %
6:00000000000101;  %  ld r0 r5 m[LOW]   %
7:11111111111110;  %  jumpOffset  %
8:00011100111101;  %  addc r3 #13   %
9:00011101000000;  %  @LowerCase addc r4 #0   %
10:00000101000101;  %  st r4 r5 m[lower_array]   %
11:10000000000000;  %  jumpOffset  %
12:00011101000001;  %  addc r4 #1   %
13:10000001010010;  %  vaddc r5 Vect_addend   %
14:00100000110001;  %  subc r3 #1   %
15:00010000011110;  %  jz0 r1 @LowerCase   %
16:11111111111000;  %  jumpOffset  %
17:00011001010101;  %  sub r5 r5   %
18:00011000110011;  %  sub r3 r3   %
19:00011001000100;  %  sub r4 r4   %
20:00011111110001;  %  addc r15 #1   %
21:01111011110000;  %  out r15 r0   %
22:00000000000101;  %  ld r0 r5 m[CAP]   %
23:11111111111111;  %  jumpOffset  %
24:00011100111101;  %  addc r3 #13   %
25:00011101000000;  %  @UpperCase addc r4 #0   %
26:00000101000101;  %  st r4 r5 m[upper_array]   %
27:10000100000000;  %  jumpOffset  %
28:00011101000001;  %  addc r4 #1   %
29:10000001010010;  %  vaddc r5 Vect_addend   %
30:00100000110001;  %  subc r3 #1   %
31:00010000011110;  %  jz0 r1 @UpperCase   %
32:11111111111000;  %  jumpOffset  %
33:00011111110001;  %  addc r15 #1   %
34:00011001010101;  %  sub r5 r5   %
35:01111011110000;  %  out r15 r0   %
36:00011000110011;  %  sub r3 r3   %
37:00011001000100;  %  sub r4 r4   %
38:00000000000101;  %  ld r0 r5 m[CAP]   %
39:11111111111111;  %  jumpOffset  %
40:00011100111001;  %  addc r3 #9   %
41:00011101000000;  %  @NumCase addc r4 #0   %
42:00000101000101;  %  st r4 r5 m[decimal_array]   %
43:10001000000000;  %  jumpOffset  %
44:00011101000001;  %  addc r4 #1   %
45:10000001010010;  %  vaddc r5 Vect_addend   %
46:00100000110001;  %  subc r3 #1   %
47:00010000011110;  %  jz0 r1 @NumCase   %
48:11111111111000;  %  jumpOffset  %
49:00011111110001;  %  addc r15 #1   %
50:00011001010101;  %  sub r5 r5   %
51:01111011110000;  %  out r15 r0   %
52:00011000110011;  %  sub r3 r3   %
53:00011001100110;  %  sub r6 r6   %
54:00011001000100;  %  sub r4 r4   %
55:00011110011000;  %  addc r9 #8   %
56:01010110010001;  %  rotl r9 #1   %
57:00000000110101;  %  ld r3 r5 m[lower_array]   %
58:10000000000000;  %  jumpOffset  %
59:10000101011001;  %  vsubc r5 r9   %
60:00000100110101;  %  st r3 r5 m[converted_to_upper]   %
61:10000001010000;  %  jumpOffset  %
62:00011100110001;  %  @lowerToUpper addc r3 #1   %
63:00000000110101;  %  ld r3 r5 m[lower_array]   %
64:10000000000000;  %  jumpOffset  %
65:10000101011001;  %  vsubc r5 r9   %
66:00000100110101;  %  st r3 r5 m[converted_to_upper]   %
67:10000001010000;  %  jumpOffset  %
68:11000000111101;  %  cmp r3 #13   %
69:00010000011110;  %  jz0 r1 @lowerToUpper   %
70:11111111110111;  %  jumpOffset  %
71:01001000110011;  %  xor r3 r3   %
72:00011111110001;  %  addc r15 #1   %
73:01111011110000;  %  out r15 r0   %
74:00000000110101;  %  ld r3 r5 m[upper_array]   %
75:10000100000000;  %  jumpOffset  %
76:10000001011001;  %  vaddc r5 r9   %
77:00000100110101;  %  st r3 r5 m[converted_to_lower]   %
78:10000101010000;  %  jumpOffset  %
79:00011100110001;  %  @upperToLower addc r3 #1   %
80:00000000110101;  %  ld r3 r5 m[lower_array]   %
81:10000000000000;  %  jumpOffset  %
82:10000001011001;  %  vaddc r5 r9   %
83:00000100110101;  %  st r3 r5 m[converted_to_lower]   %
84:10000101010000;  %  jumpOffset  %
85:11000000111101;  %  cmp r3 #13   %
86:00010000011110;  %  jz0 r1 @upperToLower   %
87:11111111110111;  %  jumpOffset  %
88:01001000110011;  %  xor r3 r3   %
89:00011111110001;  %  addc r15 #1   %
90:01111011110000;  %  out r15 r0   %
91:00000000110101;  %  ld r3 r5 m[decimal_array]   %
92:10001000000000;  %  jumpOffset  %
93:10000001011001;  %  vaddc r5 r9   %
94:00000100110101;  %  st r3 r5 m[converted_decimal]   %
95:10001001010000;  %  jumpOffset  %
96:00011100110001;  %  @convDecimal addc r3 #1   %
97:00000000110101;  %  ld r3 r5 m[decimal_array]   %
98:10001000000000;  %  jumpOffset  %
99:10000001011001;  %  vaddc r5 r9   %
100:00000100110101;  %  st r3 r5 m[converted_decimal]   %
101:10001001010000;  %  jumpOffset  %
102:11000000111101;  %  cmp r3 #13   %
103:00010000011110;  %  jz0 r1 @convDecimal   %
104:11111111110111;  %  jumpOffset  %
105:00011111110001;  %  addc r15 #1   %
106:01111011110000;  %  out r15 r0   %
[107 .. 16380] : 11111111111111; %EMPTY MEMORY LOCATIONS %
16383:10000011000010; %CAP%
16382:11000011100010; %LOW%
16381:00000000110000; %NUM%
END;
